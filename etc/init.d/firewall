#!/bin/sh
### BEGIN INIT INFO
# Provides:          firewall
# Required-Start:    mountkernfs ifupdown $local_fs
# X-Start-Before:    networking
# Default-Start:     2 3 4 5
# Required-Stop:
# Default-Stop: 0 1 6
# Short-Description: Configure the ip(6)tables firewall.
# Description:       Configure the ip(6)tables firewall.
### END INIT INFO
# Exemple de configuration de pare-feu
#
# Défauts :
# - Cette configuration s'applique à toutes les interfaces réseau.
#   Si vous voulez ne restreindre cela qu'à une interface donnée,
#   utilisez '-i INTERFACE' dans les appels iptables.
# - L'accès à distance pour les services TCP/UDP est accordé à tout
#   hôte, vous voudrez probablement restreindre cela en utilisant
#   '--source'
#
# chkconfig: 2345 9 91
# description: Active/Désactive le pare-feu au démarrage
#
# Vous pouvez tester ce script avant de l'appliquer avec l'extrait de
# shell suivant, si vous ne tapez rien pendant 20 secondes, les
# règles de pare-feu seront effacées.
#---------------------------------------------------------------
#  while true; do test=""; read  -t 60 -p "OK pour 1 min ?" test ; \
#  [ -z "$test" ] && /etc/init.d/firewall clear ; done
#---------------------------------------------------------------
 
PATH=/bin:/sbin:/usr/bin:/usr/sbin
 
# DNS 53
# DHCP 67 68
UDP_SERVICES="53 67 68 138"

# Services que le système utilisera du réseau
# DNS 53
# WEB 80 443
REMOTE_TCP_SERVICES="22 53 80 443"

# DNS 31
# DHCP 67 68 138
# ntp
REMOTE_UDP_SERVICES="53 67 68 123 138"
 
if ! [ -x /sbin/iptables ]; then  
    exit 0
fi
 
fw_start () {

# Nettoyage
	/sbin/iptables --flush


#############################   TRAFFIC ENTRANT    ############################

# Création de la chaine LOGDROP : Suppression+LOG
	/sbin/iptables -N LOGDROP > /dev/null 2> /dev/null
	/sbin/iptables -F LOGDROP
	/sbin/iptables -A LOGDROP -m limit -j LOG --log-prefix "[DROP-IN] "
	/sbin/iptables -A LOGDROP -j DROP

# Traffic local	
	/sbin/iptables -A INPUT -i lo -j ACCEPT
  
# Session déjà établie
	/sbin/iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


###################### Protection contre les scans #############################
	/sbin/iptables -N SCANS
	/sbin/iptables -A SCANS -p tcp --tcp-flags FIN,URG,PSH FIN,URG,PSH -j DROP
	/sbin/iptables -A SCANS -p tcp --tcp-flags ALL ALL -j DROP
	/sbin/iptables -A SCANS -p tcp --tcp-flags ALL NONE -j DROP
	/sbin/iptables -A SCANS -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
	
	/sbin/iptables -A INPUT -m state --state INVALID -j DROP

###################### Protection contre le flood ##############################
 
# Création d'une chaine de BlackList
	/sbin/iptables -N BLACKLIST > /dev/null 2> /dev/null
	/sbin/iptables -F BLACKLIST
	# Quand le paquet arrive, on le LOG
	/sbin/iptables -A BLACKLIST -m limit -j LOG --log-prefix "[DROP-BLACKLIST] "
	# Puis on le DROP
	/sbin/iptables -A BLACKLIST -m recent --name BLACKLIST --set -j DROP
	# Et on bloque les autres paquets de cette source pendant 600s
	/sbin/iptables -A INPUT -m recent --update --name BLACKLIST --seconds 600 --rttl -j DROP

# Création d'une chaine pour limiter le syn flood
	/sbin/iptables -N syn-flood 
	/sbin/iptables -A syn-flood -m limit --limit 10/s --limit-burst 25 -j RETURN
	/sbin/iptables -A syn-flood -m limit --limit 1/s -j LOG --log-prefix "[SYN FLOOD]" 
	/sbin/iptables -A syn-flood -j DROP

# Création d'une chaine pour limiter l'icmp flood
	/sbin/iptables -N icmp-flood 
	/sbin/iptables -A icmp-flood -m limit --limit 1/s -j LOG --log-prefix "[ICMP FLOOD]" 
	/sbin/iptables -A icmp-flood -j ACCEPT


# SSH 
	/sbin/iptables -A INPUT -p tcp --dport 22 --syn -j syn-flood 
	/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --name COUNTER_SSH --set
	/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --name COUNTER_SSH --update --seconds 10 --hitcount 2 --rttl -j BLACKLIST 
	/sbin/iptables -A INPUT -p tcp --dport 22 -j ACCEPT
# DNS 
	/sbin/iptables -A INPUT -p tcp --dport 53 -m state --state NEW -m recent --name COUNTER_DNS --set
	/sbin/iptables -A INPUT -p tcp --dport 53 -m state --state NEW -m recent --name COUNTER_DNS --update --seconds 10 --hitcount 10 --rttl -j BLACKLIST 
	/sbin/iptables -A INPUT -p tcp --dport 53 -j ACCEPT
# HTTP
	/sbin/iptables -A INPUT -p tcp --dport 80 -m state --state NEW -m recent --name COUNTER_HTTP --set
	/sbin/iptables -A INPUT -p tcp --dport 80 -m state --state NEW -m recent --name COUNTER_HTTP --update --seconds 5 --hitcount 50 --rttl -j BLACKLIST 
	/sbin/iptables -A INPUT -p tcp --dport 80 -j ACCEPT
# HTTPS
	/sbin/iptables -A INPUT -p tcp --dport 443 -m state --state NEW -m recent --name COUNTER_HTTP --set
	/sbin/iptables -A INPUT -p tcp --dport 443 -m state --state NEW -m recent --name COUNTER_HTTP --update --seconds 5 --hitcount 20 --rttl -j BLACKLIST 
	/sbin/iptables -A INPUT -p tcp --dport 443 -j ACCEPT

# ICMP
	/sbin/iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s -j icmp-flood
	/sbin/iptables -A INPUT -p icmp --icmp-type echo-reply -m limit --limit 1/s -j icmp-flood

# Fragments
	/sbin/iptables -A INPUT -f -j LOG --log-prefix "[DROP FRAGMENT] " 
	/sbin/iptables -A INPUT -f -j DROP

# Création d'une chaine pour limiter le flood udp
	/sbin/iptables -N udp-flood 
	/sbin/iptables -A udp-flood -m limit --limit 1/s --limit-burst 5 -j RETURN
	/sbin/iptables -A udp-flood -m limit --limit 1/s -j LOG --log-prefix "[UDP FLOOD]" 
	/sbin/iptables -A udp-flood -j DROP

# Inspection de tous les paquets UDP
	/sbin/iptables -A INPUT  -p udp -j udp-flood 

# Services UDP
	if [ -n "$UDP_SERVICES" ] ; then
		for PORT in $UDP_SERVICES; do
			/sbin/iptables -A INPUT -p udp --dport ${PORT} -j ACCEPT
		done
	fi
 
# A Virer en prod (test vmware)
	/sbin/iptables -A INPUT -s 172.16.52.1 -p udp --dport 17500 -j ACCEPT
  

 # Log des autres paquets qui seront supprimés
	/sbin/iptables -A INPUT -j LOGDROP
 	/sbin/iptables --policy INPUT DROP

###################################   SORTIE    ################################

# Création de la chaine LOGDROPOUT : Suppression+LOG
	/sbin/iptables -N LOGDROPOUT > /dev/null 2> /dev/null
	/sbin/iptables -F LOGDROPOUT
	/sbin/iptables -A LOGDROPOUT -m limit -j LOG --log-prefix "[DROP-OUT] "
	/sbin/iptables -A LOGDROPOUT -j DROP
	

	/sbin/iptables -A OUTPUT -j ACCEPT -o lo 
	/sbin/iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# ICMP est permis
	/sbin/iptables -A OUTPUT -p icmp -j ACCEPT

# Ainsi que pour tous les services que nous avons définis
	if [ -n "$REMOTE_TCP_SERVICES" ] ; then
		for PORT in $REMOTE_TCP_SERVICES; do
			/sbin/iptables -A OUTPUT -p tcp --dport ${PORT} -j ACCEPT
		done
	fi

	if [ -n "$REMOTE_UDP_SERVICES" ] ; then
		for PORT in $REMOTE_UDP_SERVICES; do
			/sbin/iptables -A OUTPUT -p udp --dport ${PORT} -j ACCEPT
		done
	fi
  
  
# Toutes les autres connexions sont enregistrées dans syslog
	/sbin/iptables -A OUTPUT -j LOG --log-prefix '[DROP-OUT] '
	/sbin/iptables -A OUTPUT -j REJECT 
	/sbin/iptables --policy OUTPUT DROP

# Autres protections réseau
	echo 1 > /proc/sys/net/ipv4/tcp_syncookies
	echo 0 > /proc/sys/net/ipv4/ip_forward 
	echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts 
	echo 1 > /proc/sys/net/ipv4/conf/all/log_martians 
	echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
	echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
	echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
	echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
}
 
fw_stop () {
	/sbin/iptables -F
	/sbin/iptables -t nat -F
	/sbin/iptables -t mangle -F
	/sbin/iptables -P INPUT ACCEPT
	/sbin/iptables -P FORWARD DROP
	/sbin/iptables -P OUTPUT ACCEPT
}
 
fw_clear () {
	/sbin/iptables -F
	/sbin/iptables -t nat -F
	/sbin/iptables -t mangle -F
 	/sbin/iptables -P INPUT ACCEPT
	/sbin/iptables -P FORWARD ACCEPT
	/sbin/iptables -P OUTPUT ACCEPT
}
 
 
case "$1" in
 	start|restart)
 		echo -n "Starting firewall.."
		fw_stop 
		fw_start
    		echo "done."
	;;
	stop)
		echo -n "Stopping firewall.."
		fw_stop
		echo "done."
	;;
	clear)
		echo -n "Clearing firewall rules.."
		fw_clear
		echo "done."
	;;
 	*)
		echo "Usage: $0 {start|stop|restart|clear}"
		exit 1
	;;
	esac
exit 0

